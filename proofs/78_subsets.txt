Prompt:
Prove that your function subsets and helper function generate_subsets_size_i correctly returns the powerset of a given list.


Proof:
We are given a list nums[ints]. This list contains distince elements.
The powerset of a list is a list containing all possible unique lists of the given list.
For example, if nums = [1,2,3], the powerset of nums is:

[ [], [1], [2], [3], [1,2], [1,3], [2,3], [1,2,3] ]

It is worth noting that we only care about lists that are composed of a distinct combination of elements. That is, for all elements in our power set, there does not exist another element in our powerset that is composed of the same elements.

For example, [2,3] is in our powerset.
By our definition above, [3,2] is not in our powerset.

Looking at our code, we can observe the following things:
* There are different cases, based upon the size of nums.
* The list loops through i in range(len(nums)+1), which means that i \in [0,len(nums)]


Our answer will be a list of lists called ans

If we input an empty list, we get a list containing the empty set.

If we input a list of size n, one of three cases will get activated in our loop:

Case 1: i == 0
We append the empty set to our answer

Case 2: 0<i<len(nums):
We use our helper function.

helper function:
We pass our helper function 




